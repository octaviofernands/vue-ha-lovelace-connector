export const id=40821;export const ids=[40821];export const modules={40821:(e,s,i)=>{i.r(s);var a=i(36312),t=(i(16891),i(50289)),n=i(29818),o=(i(13292),i(77372),i(29180)),r=(i(24284),i(4169),i(27120),i(24640),i(88400),i(60203),i(90431),i(94526)),l=i(71443),h=i(6121),d=i(55321),c=i(50070);const u="M20.71,7.04C21.1,6.65 21.1,6 20.71,5.63L18.37,3.29C18,2.9 17.35,2.9 16.96,3.29L15.12,5.12L18.87,8.87M3,17.25V21H6.75L17.81,9.93L14.06,6.18L3,17.25Z";(0,a.A)([(0,n.EM)("dialog-user-detail")],(function(e,s){return{F:class extends s{constructor(...s){super(...s),e(this)}},d:[{kind:"field",decorators:[(0,n.MZ)({attribute:!1})],key:"hass",value:void 0},{kind:"field",decorators:[(0,n.wk)()],key:"_name",value:void 0},{kind:"field",decorators:[(0,n.wk)()],key:"_isAdmin",value:void 0},{kind:"field",decorators:[(0,n.wk)()],key:"_localOnly",value:void 0},{kind:"field",decorators:[(0,n.wk)()],key:"_isActive",value:void 0},{kind:"field",decorators:[(0,n.wk)()],key:"_error",value:void 0},{kind:"field",decorators:[(0,n.wk)()],key:"_params",value:void 0},{kind:"field",decorators:[(0,n.wk)()],key:"_submitting",value:()=>!1},{kind:"method",key:"showDialog",value:async function(e){this._params=e,this._error=void 0,this._name=e.entry.name||"",this._isAdmin=e.entry.group_ids.includes(l.wj),this._localOnly=e.entry.local_only,this._isActive=e.entry.is_active,await this.updateComplete}},{kind:"method",key:"render",value:function(){if(!this._params)return t.s6;const e=this._params.entry,s=(0,l.xg)(this.hass,e,!0);return t.qy` <ha-dialog open @closed="${this._close}" scrimClickAction escapeKeyAction .heading="${(0,o.l)(this.hass,e.name)}"> <div> ${this._error?t.qy`<div class="error">${this._error}</div>`:t.s6} <div class="secondary"> ${this.hass.localize("ui.panel.config.users.editor.id")}: ${e.id}<br> </div> ${0===s.length?t.s6:t.qy` <div class="badge-container"> ${s.map((([e,s])=>t.qy` <ha-label> <ha-svg-icon slot="icon" .path="${e}"></ha-svg-icon> ${s} </ha-label> `))} </div> `} <div class="form"> ${e.system_generated?t.s6:t.qy` <ha-textfield dialogInitialFocus .value="${this._name}" @input="${this._nameChanged}" .label="${this.hass.localize("ui.panel.config.users.editor.name")}"></ha-textfield> <ha-settings-row> <span slot="heading"> ${this.hass.localize("ui.panel.config.users.editor.username")} </span> <span slot="description">${e.username}</span> ${this.hass.user?.is_owner?t.qy` <ha-icon-button .path="${u}" @click="${this._changeUsername}" .label="${this.hass.localize("ui.panel.config.users.editor.change_username")}"> </ha-icon-button> `:t.s6} </ha-settings-row> `} ${!e.system_generated&&this.hass.user?.is_owner?t.qy` <ha-settings-row> <span slot="heading"> ${this.hass.localize("ui.panel.config.users.editor.password")} </span> <span slot="description">************</span> ${this.hass.user?.is_owner?t.qy` <ha-icon-button .path="${u}" @click="${this._changePassword}" .label="${this.hass.localize("ui.panel.config.users.editor.change_password")}"> </ha-icon-button> `:t.s6} </ha-settings-row> `:t.s6} <ha-settings-row> <span slot="heading"> ${this.hass.localize("ui.panel.config.users.editor.active")} </span> <span slot="description"> ${this.hass.localize("ui.panel.config.users.editor.active_description")} </span> <ha-switch .disabled="${e.system_generated||e.is_owner}" .checked="${this._isActive}" @change="${this._activeChanged}"> </ha-switch> </ha-settings-row> <ha-settings-row> <span slot="heading"> ${this.hass.localize("ui.panel.config.users.editor.local_access_only")} </span> <span slot="description"> ${this.hass.localize("ui.panel.config.users.editor.local_access_only_description")} </span> <ha-switch .disabled="${e.system_generated}" .checked="${this._localOnly}" @change="${this._localOnlyChanged}"> </ha-switch> </ha-settings-row> <ha-settings-row> <span slot="heading"> ${this.hass.localize("ui.panel.config.users.editor.admin")} </span> <span slot="description"> ${this.hass.localize("ui.panel.config.users.editor.admin_description")} </span> <ha-switch .disabled="${e.system_generated||e.is_owner}" .checked="${this._isAdmin}" @change="${this._adminChanged}"> </ha-switch> </ha-settings-row> ${this._isAdmin||e.system_generated?t.s6:t.qy` <ha-alert alert-type="info"> ${this.hass.localize("ui.panel.config.users.users_privileges_note")} </ha-alert> `} </div> ${e.system_generated?t.qy` <ha-alert alert-type="info"> ${this.hass.localize("ui.panel.config.users.editor.system_generated_read_only_users")} </ha-alert> `:t.s6} </div> <div slot="secondaryAction"> <ha-button class="warning" @click="${this._deleteEntry}" .disabled="${this._submitting||e.system_generated||e.is_owner}"> ${this.hass.localize("ui.panel.config.users.editor.delete_user")} </ha-button> </div> <div slot="primaryAction"> <ha-button @click="${this._updateEntry}" .disabled="${!this._name||this._submitting||e.system_generated}"> ${this.hass.localize("ui.panel.config.users.editor.update_user")} </ha-button> </div> </ha-dialog> `}},{kind:"method",key:"_nameChanged",value:function(e){this._error=void 0,this._name=e.target.value}},{kind:"method",key:"_adminChanged",value:function(e){this._isAdmin=e.target.checked}},{kind:"method",key:"_localOnlyChanged",value:function(e){this._localOnly=e.target.checked}},{kind:"method",key:"_activeChanged",value:function(e){this._isActive=e.target.checked}},{kind:"method",key:"_updateEntry",value:async function(){this._submitting=!0;try{await this._params.updateEntry({name:this._name.trim(),is_active:this._isActive,group_ids:[this._isAdmin?l.wj:l.eR],local_only:this._localOnly}),this._close()}catch(e){this._error=e?.message||"Unknown error"}finally{this._submitting=!1}}},{kind:"method",key:"_deleteEntry",value:async function(){this._submitting=!0;try{await this._params.removeEntry()&&(this._params=void 0)}finally{this._submitting=!1}}},{kind:"method",key:"_changeUsername",value:async function(){const e=this._params?.entry.credentials.find((e=>"homeassistant"===e.type));if(!e)return void(0,h.showAlertDialog)(this,{title:"No Home Assistant credentials found."});const s=await(0,h.showPromptDialog)(this,{inputLabel:this.hass.localize("ui.panel.config.users.change_username.new_username"),confirmText:this.hass.localize("ui.panel.config.users.change_username.change"),title:this.hass.localize("ui.panel.config.users.change_username.caption"),defaultValue:this._params.entry.username});if(s)try{await(0,r.Gk)(this.hass,this._params.entry.id,s),this._params={...this._params,entry:{...this._params.entry,username:s}},this._params.replaceEntry(this._params.entry),(0,h.showAlertDialog)(this,{text:this.hass.localize("ui.panel.config.users.change_username.username_changed")})}catch(e){(0,h.showAlertDialog)(this,{title:this.hass.localize("ui.panel.config.users.change_username.failed"),text:e.message})}}},{kind:"method",key:"_changePassword",value:async function(){const e=this._params?.entry.credentials.find((e=>"homeassistant"===e.type));e?(0,c.M)(this,{userId:this._params.entry.id}):(0,h.showAlertDialog)(this,{title:"No Home Assistant credentials found."})}},{kind:"method",key:"_close",value:function(){this._params=void 0}},{kind:"get",static:!0,key:"styles",value:function(){return[d.nA,t.AH`ha-dialog{--mdc-dialog-max-width:500px}.form{padding-top:16px}.secondary{color:var(--secondary-text-color)}ha-textfield{display:block}.badge-container{margin-top:4px}.badge-container>*{margin-top:4px;margin-bottom:4px;margin-right:4px;margin-left:0;margin-inline-end:4px;margin-inline-start:0}ha-settings-row{padding:0}`]}}]}}),t.WF)},50070:(e,s,i)=>{i.d(s,{M:()=>n});var a=i(34897);const t=()=>i.e(16442).then(i.bind(i,16442)),n=(e,s)=>{(0,a.r)(e,"show-dialog",{dialogTag:"dialog-admin-change-password",dialogImport:t,dialogParams:s})}}};
//# sourceMappingURL=40821.SsszlTndzGg.js.map