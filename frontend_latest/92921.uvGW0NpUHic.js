export const id=92921;export const ids=[92921];export const modules={92921:(e,t,i)=>{i.a(e,(async(e,a)=>{try{i.r(t),i.d(t,{HuiCalendarCard:()=>_});var s=i(36312),n=i(68689),r=(i(16891),i(50289)),d=i(29818),o=i(46999),h=i(38962),c=i(19244),l=i(18409),u=(i(13082),i(49886)),v=i(91174),k=i(18102),f=(i(46645),e([v]));v=(f.then?(await f)():f)[0];let _=(0,s.A)([(0,d.EM)("hui-calendar-card")],(function(e,t){class a extends t{constructor(...t){super(...t),e(this)}}return{F:a,d:[{kind:"method",static:!0,key:"getConfigElement",value:async function(){return await i.e(25356).then(i.bind(i,25356)),document.createElement("hui-calendar-card-editor")}},{kind:"method",static:!0,key:"getStubConfig",value:function(e,t,i){return{entities:(0,k.B)(e,2,t,i,["calendar"])}}},{kind:"field",decorators:[(0,d.MZ)({attribute:!1})],key:"hass",value:void 0},{kind:"field",decorators:[(0,d.wk)()],key:"_events",value:()=>[]},{kind:"field",decorators:[(0,d.wk)()],key:"_config",value:void 0},{kind:"field",decorators:[(0,d.wk)()],key:"_calendars",value:()=>[]},{kind:"field",decorators:[(0,d.wk)()],key:"_eventDisplay",value:()=>"list-item"},{kind:"field",decorators:[(0,d.wk)()],key:"_narrow",value:()=>!1},{kind:"field",decorators:[(0,d.wk)()],key:"_error",value(){}},{kind:"field",key:"_startDate",value:void 0},{kind:"field",key:"_endDate",value:void 0},{kind:"field",key:"_resizeObserver",value:void 0},{kind:"method",key:"setConfig",value:function(e){if(!e.entities?.length)throw new Error("Entities must be specified");if(!Array.isArray(e.entities))throw new Error("Entities need to be an array");this._calendars=e.entities.map(((e,t)=>({entity_id:e,backgroundColor:(0,o.Vy)(t)}))),this._config?.entities!==e.entities&&this._fetchCalendarEvents(),this._config={initial_view:"dayGridMonth",...e}}},{kind:"method",key:"getCardSize",value:function(){return this._config?.header?1:11}},{kind:"method",key:"connectedCallback",value:function(){(0,n.A)(a,"connectedCallback",this,3)([]),this.updateComplete.then((()=>this._attachObserver()))}},{kind:"method",key:"disconnectedCallback",value:function(){(0,n.A)(a,"disconnectedCallback",this,3)([]),this._resizeObserver&&this._resizeObserver.disconnect()}},{kind:"method",key:"render",value:function(){if(!this._config||!this.hass||!this._calendars.length)return r.s6;return r.qy` <ha-card> <div class="header">${this._config.title}</div> <ha-full-calendar .narrow="${this._narrow}" .events="${this._events}" .hass="${this.hass}" .views="${["dayGridMonth","dayGridDay","listWeek"]}" .initialView="${this._config.initial_view}" .eventDisplay="${this._eventDisplay}" .error="${this._error}" @view-changed="${this._handleViewChanged}"></ha-full-calendar> </ha-card> `}},{kind:"method",key:"updated",value:function(e){if((0,n.A)(a,"updated",this,3)([e]),!this._config||!this.hass)return;const t=e.get("hass"),i=e.get("_config");(!t||!i||e.has("hass")&&t.themes!==this.hass.themes||e.has("_config")&&i.theme!==this._config.theme)&&(0,h.Q)(this,this.hass.themes,this._config.theme)}},{kind:"method",key:"_handleViewChanged",value:function(e){this._eventDisplay="dayGridMonth"===e.detail.view?"list-item":"auto",this._startDate=e.detail.start,this._endDate=e.detail.end,this._fetchCalendarEvents()}},{kind:"method",key:"_fetchCalendarEvents",value:async function(){if(!this._startDate||!this._endDate)return;this._error=void 0;const e=await(0,u.ms)(this.hass,this._startDate,this._endDate,this._calendars);if(this._events=e.events,e.errors.length>0){const t=e.errors.map((e=>this.hass.states[e]?(0,c.u)(this.hass.states[e]):e)).join(", ");this._error=`${this.hass.localize("ui.components.calendar.event_retrieval_error")} ${t}`}}},{kind:"method",key:"_measureCard",value:function(){const e=this.shadowRoot.querySelector("ha-card");e&&(this._narrow=e.offsetWidth<870)}},{kind:"method",key:"_attachObserver",value:async function(){this._resizeObserver||(this._resizeObserver=new ResizeObserver((0,l.s)((()=>this._measureCard()),250,!1)));const e=this.shadowRoot.querySelector("ha-card");e&&this._resizeObserver.observe(e)}},{kind:"get",static:!0,key:"styles",value:function(){return r.AH`ha-card{position:relative;padding:0 8px 8px;box-sizing:border-box;height:100%}.header{color:var(--ha-card-header-color,--primary-text-color);font-size:var(--ha-card-header-font-size, 24px);line-height:1.2;padding-top:16px;padding-left:8px;padding-inline-start:8px;direction:var(--direction)}ha-full-calendar{--calendar-height:400px}`}}]}}),r.WF);a()}catch(e){a(e)}}))}};
//# sourceMappingURL=92921.uvGW0NpUHic.js.map