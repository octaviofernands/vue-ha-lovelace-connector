export const id=89344;export const ids=[89344];export const modules={89344:(e,t,i)=>{i.r(t);var s=i(36312),a=(i(253),i(2075),i(16891),i(4525),i(72606),i(63893),i(50289)),n=i(29818),l=i(10977),o=i(94100),d=i(34897),h=i(19244),r=(i(35619),i(72829),i(47572)),c=i(55321);i(28019);(0,s.A)([(0,n.EM)("dialog-expose-entity")],(function(e,t){return{F:class extends t{constructor(...t){super(...t),e(this)}},d:[{kind:"field",decorators:[(0,n.MZ)({attribute:!1})],key:"hass",value:void 0},{kind:"field",decorators:[(0,n.wk)()],key:"_params",value:void 0},{kind:"field",decorators:[(0,n.wk)()],key:"_filter",value:void 0},{kind:"field",decorators:[(0,n.wk)()],key:"_selected",value:()=>[]},{kind:"method",key:"showDialog",value:async function(e){this._params=e}},{kind:"method",key:"closeDialog",value:function(){this._params=void 0,this._selected=[],this._filter=void 0,(0,d.r)(this,"dialog-closed",{dialog:this.localName})}},{kind:"method",key:"render",value:function(){if(!this._params)return a.s6;const e=this.hass.localize("ui.panel.config.voice_assistants.expose.expose_dialog.header"),t=this._filterEntities(this._params.exposedEntities,this._filter);return a.qy` <ha-dialog open @closed="${this.closeDialog}" .heading="${e}"> <ha-dialog-header slot="heading" show-border> <h2 class="header" slot="title"> ${e} <span class="subtitle"> ${this.hass.localize("ui.panel.config.voice_assistants.expose.expose_dialog.expose_to",{assistants:this._params.filterAssistants.map((e=>r.aK[e].name)).join(", ")})} </span> </h2> <ha-icon-button .label="${this.hass.localize("ui.dialogs.generic.close")}" .path="${"M19,6.41L17.59,5L12,10.59L6.41,5L5,6.41L10.59,12L5,17.59L6.41,19L12,13.41L17.59,19L19,17.59L13.41,12L19,6.41Z"}" dialogAction="close" slot="navigationIcon"></ha-icon-button> <search-input .hass="${this.hass}" .filter="${this._filter}" @value-changed="${this._filterChanged}"></search-input> </ha-dialog-header> <mwc-list multi> <lit-virtualizer scroller class="ha-scrollbar" @click="${this._itemClicked}" .items="${t}" .renderItem="${this._renderItem}"> </lit-virtualizer> </mwc-list> <mwc-button slot="primaryAction" @click="${this._expose}" .disabled="${0===this._selected.length}"> ${this.hass.localize("ui.panel.config.voice_assistants.expose.expose_dialog.expose_entities",{count:this._selected.length})} </mwc-button> </ha-dialog> `}},{kind:"field",key:"_handleSelected",value(){return e=>{const t=e.target.value;if(e.detail.selected){if(this._selected.includes(t))return;this._selected=[...this._selected,t]}else this._selected=this._selected.filter((e=>e!==t))}}},{kind:"method",key:"_itemClicked",value:function(e){const t=e.target.closest("ha-check-list-item");t.selected=!t.selected}},{kind:"method",key:"_filterChanged",value:function(e){this._filter=e.detail.value}},{kind:"field",key:"_filterEntities",value(){return(0,o.A)(((e,t)=>{const i=t?.toLowerCase();return Object.values(this.hass.states).filter((t=>this._params.filterAssistants.some((i=>!e[t.entity_id]?.[i]))&&(!i||t.entity_id.toLowerCase().includes(i)||(0,h.u)(t)?.toLowerCase().includes(i))))}))}},{kind:"field",key:"_renderItem",value(){return e=>a.qy` <ha-check-list-item graphic="icon" twoLine .value="${e.entity_id}" .selected="${this._selected.includes(e.entity_id)}" @request-selected="${this._handleSelected}"> <ha-state-icon title="${(0,l.J)(e?.state)}" slot="graphic" .hass="${this.hass}" .stateObj="${e}"></ha-state-icon> ${(0,h.u)(e)} <span slot="secondary">${e.entity_id}</span> </ha-check-list-item> `}},{kind:"method",key:"_expose",value:function(){this._params.exposeEntities(this._selected),this.closeDialog()}},{kind:"get",static:!0,key:"styles",value:function(){return[c.RF,a.AH`ha-dialog{--dialog-content-padding:0;--mdc-dialog-min-width:500px;--mdc-dialog-max-width:600px}mwc-list{position:relative}lit-virtualizer{height:500px}search-input{width:100%;display:block;box-sizing:border-box;--text-field-suffix-padding-left:8px}.header{margin:0;pointer-events:auto;-webkit-font-smoothing:antialiased;font-weight:inherit;font-size:inherit;box-sizing:border-box;display:flex;flex-direction:column;margin:-4px 0}.subtitle{color:var(--secondary-text-color);font-size:1rem;line-height:normal}lit-virtualizer{width:100%;contain:size layout!important}ha-check-list-item{width:100%;height:72px}ha-check-list-item ha-state-icon{margin-left:24px;margin-inline-start:24px;margin-inline-end:initial}@media all and (max-height:800px){lit-virtualizer{height:334px}}@media all and (max-height:600px){lit-virtualizer{height:238px}}@media all and (max-width:500px),all and (max-height:500px){ha-dialog{--mdc-dialog-min-width:calc(
              100vw - env(safe-area-inset-right) - env(safe-area-inset-left)
            );--mdc-dialog-max-width:calc(
              100vw - env(safe-area-inset-right) - env(safe-area-inset-left)
            );--mdc-dialog-min-height:100%;--mdc-dialog-max-height:100%;--vertical-align-dialog:flex-end;--ha-dialog-border-radius:0px}lit-virtualizer{height:calc(100vh - 198px)}search-input{--text-field-suffix-padding-left:unset}ha-check-list-item ha-state-icon{margin-left:8px;margin-inline-start:8px;margin-inline-end:initial}}`]}}]}}),a.WF)},28019:(e,t,i)=>{var s=i(36312),a=(i(253),i(2075),i(16891),i(4525),i(50289)),n=i(29818),l=i(94100),o=i(33922),d=i(34897),h=i(92389),r=(i(6482),i(24640),i(60203),i(86181)),c=i(86127),u=i(54108),g=i(53368),p=i(47572),_=i(20712),m=i(55321),f=i(51842),y=i(84976);(0,s.A)([(0,n.EM)("entity-voice-settings")],(function(e,t){return{F:class extends t{constructor(...t){super(...t),e(this)}},d:[{kind:"field",decorators:[(0,n.MZ)({attribute:!1})],key:"hass",value:void 0},{kind:"field",decorators:[(0,n.MZ)()],key:"entityId",value:void 0},{kind:"field",decorators:[(0,n.MZ)({attribute:!1})],key:"exposed",value:void 0},{kind:"field",decorators:[(0,n.MZ)({attribute:!1})],key:"entry",value:void 0},{kind:"field",decorators:[(0,n.wk)()],key:"_cloudStatus",value:void 0},{kind:"field",decorators:[(0,n.wk)()],key:"_aliases",value:void 0},{kind:"field",decorators:[(0,n.wk)()],key:"_googleEntity",value:void 0},{kind:"field",decorators:[(0,n.wk)()],key:"_unsupported",value:()=>({})},{kind:"method",key:"willUpdate",value:function(e){(0,o.x)(this.hass,"cloud")&&(e.has("entityId")&&this.entityId&&this._fetchEntities(),this.hasUpdated||(0,c.eN)(this.hass).then((e=>{this._cloudStatus=e})))}},{kind:"method",key:"_fetchEntities",value:async function(){try{const e=await(0,g.kz)(this.hass,this.entityId);this._googleEntity=e,this.requestUpdate("_googleEntity")}catch(e){"not_supported"===e.code&&(this._unsupported["cloud.google_assistant"]=!0,this.requestUpdate("_unsupported"))}try{await(0,r.Gk)(this.hass,this.entityId)}catch(e){"not_supported"===e.code&&(this._unsupported["cloud.alexa"]=!0,this.requestUpdate("_unsupported"))}}},{kind:"field",key:"_getEntityFilterFuncs",value:()=>(0,l.A)(((e,t)=>({google:(0,h._)(e.include_domains,e.include_entities,e.exclude_domains,e.exclude_entities),alexa:(0,h._)(t.include_domains,t.include_entities,t.exclude_domains,t.exclude_entities)})))},{kind:"method",key:"render",value:function(){const e=!0===this._cloudStatus?.logged_in&&!0===this._cloudStatus.prefs.google_enabled,t=!0===this._cloudStatus?.logged_in&&!0===this._cloudStatus.prefs.alexa_enabled,i=[...Object.keys(p.aK)],s=[...i],n=t&&!(0,h.e)(this._cloudStatus.alexa_entities),l=e&&!(0,h.e)(this._cloudStatus.google_entities);e?l&&s.splice(s.indexOf("cloud.google_assistant"),1):(i.splice(i.indexOf("cloud.google_assistant"),1),s.splice(i.indexOf("cloud.google_assistant"),1)),t?n&&s.splice(s.indexOf("cloud.alexa"),1):(i.splice(i.indexOf("cloud.alexa"),1),s.splice(s.indexOf("cloud.alexa"),1));const o=s.some((e=>this.exposed[e]));let d;(n||l)&&(d=this._getEntityFilterFuncs(this._cloudStatus.google_entities,this._cloudStatus.alexa_entities));const r=n&&d.alexa(this.entityId),c=l&&d.google(this.entityId),u=o||r||c;return a.qy` <ha-settings-row> <h3 slot="heading"> ${this.hass.localize("ui.dialogs.voice-settings.expose_header")} </h3> <ha-switch @change="${this._toggleAll}" .assistants="${s}" .checked="${u}"></ha-switch> </ha-settings-row> ${u?i.map((e=>{const t=!this._unsupported[e],i=n&&"cloud.alexa"===e?r:l&&"cloud.google_assistant"===e?c:this.exposed[e],s=n&&"cloud.alexa"===e||l&&"cloud.google_assistant"===e,o="cloud.google_assistant"===e&&!l&&t&&this._googleEntity?.might_2fa;return a.qy` <ha-settings-row .threeLine="${!t&&s}"> <img alt="" src="${(0,f.MR)({domain:p.aK[e].domain,type:"icon",darkOptimized:this.hass.themes?.darkMode})}" crossorigin="anonymous" referrerpolicy="no-referrer" slot="prefix"> <span slot="heading">${p.aK[e].name}</span> ${t?a.s6:a.qy`<div slot="description" class="unsupported"> <ha-svg-icon .path="${"M13,13H11V7H13M13,17H11V15H13M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10,10 0 0,0 12,2Z"}"></ha-svg-icon> ${this.hass.localize("ui.dialogs.voice-settings.unsupported")} </div>`} ${s?a.qy` <div slot="description"> ${this.hass.localize("ui.dialogs.voice-settings.manual_config")} </div> `:a.s6} ${o?a.qy` <ha-formfield slot="description" .label="${this.hass.localize("ui.dialogs.voice-settings.ask_pin")}"> <ha-checkbox .checked="${!this._googleEntity.disable_2fa}" @change="${this._2faChanged}"></ha-checkbox> </ha-formfield> `:a.s6} <ha-switch .assistant="${e}" @change="${this._toggleAssistant}" .disabled="${s||!i&&!t}" .checked="${i}"></ha-switch> </ha-settings-row> `})):a.s6} <h3 class="header"> ${this.hass.localize("ui.dialogs.voice-settings.aliases_header")} </h3> <p class="description"> ${this.hass.localize("ui.dialogs.voice-settings.aliases_description")} </p> ${this.entry?a.qy`<ha-aliases-editor .hass="${this.hass}" .aliases="${this._aliases??this.entry.aliases}" @value-changed="${this._aliasesChanged}" @blur="${this._saveAliases}"></ha-aliases-editor>`:a.qy`<ha-alert alert-type="warning"> ${this.hass.localize("ui.dialogs.voice-settings.aliases_no_unique_id",{faq_link:a.qy`<a href="${(0,y.o)(this.hass,"/faq/unique_id")}" target="_blank" rel="noreferrer">${this.hass.localize("ui.dialogs.entity_registry.faq")}</a>`})} </ha-alert>`} `}},{kind:"method",key:"_aliasesChanged",value:function(e){this._aliases=e.detail.value}},{kind:"method",key:"_2faChanged",value:async function(e){try{await(0,c.p1)(this.hass,this.entityId,!e.target.checked)}catch(t){e.target.checked=!e.target.checked}}},{kind:"method",key:"_saveAliases",value:async function(){if(!this._aliases)return;const e=await(0,u.G_)(this.hass,this.entityId,{aliases:this._aliases.map((e=>e.trim())).filter((e=>e))});(0,d.r)(this,"entity-entry-updated",e.entity_entry)}},{kind:"method",key:"_toggleAssistant",value:async function(e){if((0,p.ij)(this.hass,[e.target.assistant],[this.entityId],e.target.checked),this.entry){const e=await(0,u.v)(this.hass,this.entityId);(0,d.r)(this,"entity-entry-updated",e)}(0,d.r)(this,"exposed-entities-changed")}},{kind:"method",key:"_toggleAll",value:async function(e){const t=e.target.checked?e.target.assistants.filter((e=>!this._unsupported[e])):e.target.assistants;if((0,p.ij)(this.hass,t,[this.entityId],e.target.checked),this.entry){const e=await(0,u.v)(this.hass,this.entityId);(0,d.r)(this,"entity-entry-updated",e)}(0,d.r)(this,"exposed-entities-changed")}},{kind:"get",static:!0,key:"styles",value:function(){return[m.RF,a.AH`:host{display:block;margin:32px;margin-top:0;--settings-row-prefix-display:contents;--settings-row-content-display:contents}ha-settings-row{padding:0}img{height:32px;width:32px;margin-right:16px;margin-inline-end:16px;margin-inline-start:initial}ha-aliases-editor{display:block}ha-alert{display:block;margin-top:16px}ha-formfield{margin-left:-8px;margin-inline-start:-8px;margin-inline-end:initial}ha-checkbox{--mdc-checkbox-state-layer-size:40px}.unsupported{display:flex;align-items:center}.unsupported ha-svg-icon{color:var(--error-color);--mdc-icon-size:16px;margin-right:4px;margin-inline-end:4px;margin-inline-start:initial}.header{margin-top:8px;margin-bottom:4px}.description{color:var(--secondary-text-color);font-size:14px;line-height:20px;margin-top:0;margin-bottom:16px}`]}}]}}),(0,_.E)(a.WF))}};
//# sourceMappingURL=89344.aavY3-AT5xQ.js.map