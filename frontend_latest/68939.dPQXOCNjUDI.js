export const id=68939;export const ids=[68939];export const modules={33871:(t,e,i)=>{i.d(e,{w:()=>s});const s=(t,e,i)=>t.callService("select","select_option",{option:i},{entity_id:e})},68939:(t,e,i)=>{i.a(t,(async(t,s)=>{try{i.r(e);var n=i(36312),a=(i(16891),i(67056),i(50289)),o=i(29818),c=i(79051),h=i(19244),r=(i(77312),i(9883)),d=i(39914),l=i(33871),u=i(7934),y=i(69743),f=i(46645),g=t([y]);y=(g.then?(await g)():g)[0];(0,n.A)([(0,o.EM)("hui-select-entity-row")],(function(t,e){return{F:class extends e{constructor(...e){super(...e),t(this)}},d:[{kind:"field",decorators:[(0,o.MZ)({attribute:!1})],key:"hass",value:void 0},{kind:"field",decorators:[(0,o.wk)()],key:"_config",value:void 0},{kind:"method",key:"setConfig",value:function(t){if(!t||!t.entity)throw new Error("Entity must be specified");this._config=t}},{kind:"method",key:"shouldUpdate",value:function(t){return(0,u.LX)(this,t)}},{kind:"method",key:"render",value:function(){if(!this.hass||!this._config)return a.s6;const t=this.hass.states[this._config.entity];return t?a.qy` <hui-generic-entity-row .hass="${this.hass}" .config="${this._config}" hideName> <ha-select .label="${this._config.name||(0,h.u)(t)}" .value="${t.state}" .disabled="${t.state===r.Hh}" naturalMenuWidth @selected="${this._selectedChanged}" @click="${c.d}" @closed="${c.d}"> ${t.attributes.options?t.attributes.options.map((e=>a.qy` <mwc-list-item .value="${e}"> ${this.hass.formatEntityState(t,e)} </mwc-list-item> `)):""} </ha-select> </hui-generic-entity-row> `:a.qy` <hui-warning> ${(0,f.j)(this.hass,this._config.entity)} </hui-warning> `}},{kind:"get",static:!0,key:"styles",value:function(){return a.AH`hui-generic-entity-row{display:flex;align-items:center}ha-select{width:100%;--ha-select-min-width:0}`}},{kind:"method",key:"_selectedChanged",value:function(t){const e=this.hass.states[this._config.entity],i=t.target.value;i!==e.state&&e.attributes.options.includes(i)&&((0,d.j)("light"),(0,l.w)(this.hass,e.entity_id,i))}}]}}),a.WF);s()}catch(t){s(t)}}))}};
//# sourceMappingURL=68939.dPQXOCNjUDI.js.map