export const id=78690;export const ids=[78690];export const modules={78690:(e,i,a)=>{a.r(i);var s=a(36312),t=(a(72606),a(50289)),d=a(29818),l=a(34897),r=(a(13292),a(25756),a(29180),a(74994),a(90431),a(10725)),n=a(55321);(0,s.A)([(0,d.EM)("dialog-device-registry-detail")],(function(e,i){return{F:class extends i{constructor(...i){super(...i),e(this)}},d:[{kind:"field",decorators:[(0,d.MZ)({attribute:!1})],key:"hass",value:void 0},{kind:"field",decorators:[(0,d.wk)()],key:"_nameByUser",value:void 0},{kind:"field",decorators:[(0,d.wk)()],key:"_error",value:void 0},{kind:"field",decorators:[(0,d.wk)()],key:"_params",value:void 0},{kind:"field",decorators:[(0,d.wk)()],key:"_areaId",value:void 0},{kind:"field",decorators:[(0,d.wk)()],key:"_labels",value:void 0},{kind:"field",decorators:[(0,d.wk)()],key:"_disabledBy",value:void 0},{kind:"field",decorators:[(0,d.wk)()],key:"_submitting",value:()=>!1},{kind:"method",key:"showDialog",value:async function(e){this._params=e,this._error=void 0,this._nameByUser=this._params.device.name_by_user||"",this._areaId=this._params.device.area_id||"",this._labels=this._params.device.labels||[],this._disabledBy=this._params.device.disabled_by,await this.updateComplete}},{kind:"method",key:"closeDialog",value:function(){this._error="",this._params=void 0,(0,l.r)(this,"dialog-closed",{dialog:this.localName})}},{kind:"method",key:"render",value:function(){if(!this._params)return t.s6;const e=this._params.device;return t.qy` <ha-dialog open @closed="${this.closeDialog}" .heading="${(0,r.xn)(e,this.hass)}"> <div> ${this._error?t.qy`<ha-alert alert-type="error">${this._error}</ha-alert> `:""} <div class="form"> <ha-textfield .value="${this._nameByUser}" @input="${this._nameChanged}" .label="${this.hass.localize("ui.dialogs.device-registry-detail.name")}" .placeholder="${e.name||""}" .disabled="${this._submitting}" dialogInitialFocus></ha-textfield> <ha-area-picker .hass="${this.hass}" .value="${this._areaId}" @value-changed="${this._areaPicked}"></ha-area-picker> <ha-labels-picker .hass="${this.hass}" .value="${this._labels}" @value-changed="${this._labelsChanged}"></ha-labels-picker> <div class="row"> <ha-switch .checked="${!this._disabledBy}" .disabled="${"config_entry"===this._params.device.disabled_by}" @change="${this._disabledByChanged}"> </ha-switch> <div> <div> ${this.hass.localize("ui.dialogs.device-registry-detail.enabled_label",{type:this.hass.localize(`ui.dialogs.device-registry-detail.type.${e.entry_type||"device"}`)})} </div> <div class="secondary"> ${this._disabledBy&&"user"!==this._disabledBy?this.hass.localize("ui.dialogs.device-registry-detail.enabled_cause",{type:this.hass.localize(`ui.dialogs.device-registry-detail.type.${e.entry_type||"device"}`),cause:this.hass.localize(`config_entry.disabled_by.${this._disabledBy}`)}):""} ${this.hass.localize("ui.dialogs.device-registry-detail.enabled_description")} </div> </div> </div> </div> </div> <mwc-button slot="secondaryAction" @click="${this.closeDialog}" .disabled="${this._submitting}"> ${this.hass.localize("ui.common.cancel")} </mwc-button> <mwc-button slot="primaryAction" @click="${this._updateEntry}" .disabled="${this._submitting}"> ${this.hass.localize("ui.dialogs.device-registry-detail.update")} </mwc-button> </ha-dialog> `}},{kind:"method",key:"_nameChanged",value:function(e){this._error=void 0,this._nameByUser=e.target.value}},{kind:"method",key:"_areaPicked",value:function(e){this._areaId=e.detail.value}},{kind:"method",key:"_labelsChanged",value:function(e){this._labels=e.detail.value}},{kind:"method",key:"_disabledByChanged",value:function(e){this._disabledBy=e.target.checked?null:"user"}},{kind:"method",key:"_updateEntry",value:async function(){this._submitting=!0;try{await this._params.updateEntry({name_by_user:this._nameByUser.trim()||null,area_id:this._areaId||null,labels:this._labels||null,disabled_by:this._disabledBy||null}),this.closeDialog()}catch(e){this._error=e.message||this.hass.localize("ui.dialogs.device-registry-detail.unknown_error")}finally{this._submitting=!1}}},{kind:"get",static:!0,key:"styles",value:function(){return[n.RF,n.nA,t.AH`mwc-button.warning{margin-right:auto;margin-inline-end:auto;margin-inline-start:initial}ha-area-picker,ha-labels-picker,ha-textfield{display:block;margin-bottom:16px}ha-switch{margin-right:16px;margin-inline-end:16px;margin-inline-start:initial;direction:var(--direction)}.row{margin-top:8px;color:var(--primary-text-color);display:flex;align-items:center}`]}}]}}),t.WF)}};
//# sourceMappingURL=78690.0UFkLnrnttQ.js.map